create or replace TABLE OUT__CUSTOMER (
	CUSTOMER_ID VARCHAR(128) NOT NULL,
	LS__CUSTOMER_ID__CUSTOMER_NAME VARCHAR(128),
	CUSTOMER_CITY VARCHAR(128),
	LS__CUSTOMER_CITY__CITY_PUSHPIN VARCHAR(128),
	CUSTOMER_COUNTRY VARCHAR(128),
	CUSTOMER_EMAIL VARCHAR(128),
	CUSTOMER_STATE VARCHAR(128),
	CUSTOMER_CREATED_DATE DATE,
	WDF__CLIENT_ID VARCHAR(128),
	primary key (CUSTOMER_ID)
);

create or replace TABLE OUT__ORDER (
	ORDER_ID VARCHAR(128) NOT NULL,
	WDF__CLIENT_ID VARCHAR(128),
	ORDER_STATUS VARCHAR(128) DEFAULT 'Processed',
	primary key (ORDER_ID)
);

create or replace TABLE OUT__PRODUCT (
	PRODUCT_ID VARCHAR(128) NOT NULL,
	LS__PRODUCT_ID__PRODUCT_NAME VARCHAR(128),
	LS__PRODUCT_ID__PRODUCT_ID_IMAGE_WEB VARCHAR(250),
	PRODUCT_BRAND VARCHAR(128),
	PRODUCT_CATEGORY VARCHAR(128),
	PRODUCT_IMAGE VARCHAR(250),
	LS__PRODUCT_IMAGE__PRODUCT_IMAGE_WEB VARCHAR(250),
	RATING NUMBER(12,2),
	WDF__CLIENT_ID VARCHAR(128),
	PRODUCT_RATING VARCHAR(16) AS (CAST(ROUND(RATING) AS VARCHAR(16777216))),
	primary key (PRODUCT_ID)
);

create or replace TABLE OUT__MONTHLYINVENTORY (
	MONTHLY_INVENTORY_ID VARCHAR(128) NOT NULL,
	PRODUCT__PRODUCT_ID VARCHAR(128),
	INVENTORY_MONTH DATE,
	MONTHLY_QUANTITY_EOM NUMBER(12,2),
	WDF__CLIENT_ID VARCHAR(128),
	MONTHLY_QUANTITY_BOM NUMBER(12,2),
	DATE TIMESTAMP_NTZ(9),
	primary key (MONTHLY_INVENTORY_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID)
);

create or replace TABLE OUT__ORDER_LINES (
	ORDER_LINE_ID VARCHAR(128) NOT NULL,
	ORDER__ORDER_ID VARCHAR(128),
	PRODUCT__PRODUCT_ID VARCHAR(128),
	CUSTOMER__CUSTOMER_ID VARCHAR(128),
	ORDER_UNIT_PRICE NUMBER(12,2),
	ORDER_UNIT_QUANTITY NUMBER(12,2),
	WDF__CLIENT_ID VARCHAR(128),
	ORDER_UNIT_DISCOUNT NUMBER(12,2),
	ORDER_UNIT_COST NUMBER(12,2),
	DATE TIMESTAMP_NTZ(9),
	ORDER_DATE TIMESTAMP_NTZ(9),
	CUSTOMER_AGE VARCHAR(128),
	primary key (ORDER_LINE_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID),
	foreign key (ORDER__ORDER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__ORDER(ORDER_ID),
	foreign key (CUSTOMER__CUSTOMER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__CUSTOMER(CUSTOMER_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID),
	foreign key (ORDER__ORDER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__ORDER(ORDER_ID),
	foreign key (CUSTOMER__CUSTOMER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__CUSTOMER(CUSTOMER_ID)
);
create or replace TABLE OUT__RETURNS (
	RETURNS_ID VARCHAR(128) NOT NULL,
	ORDER__ORDER_ID VARCHAR(128),
	PRODUCT__PRODUCT_ID VARCHAR(128),
	CUSTOMER__CUSTOMER_ID VARCHAR(128),
	RETURN_UNIT_COST NUMBER(12,2),
	RETURN_UNIT_QUANTITY NUMBER(12,2),
	WDF__CLIENT_ID VARCHAR(128),
	RETURN_UNIT_PAID_AMOUNT NUMBER(12,2),
	DATE TIMESTAMP_NTZ(9),
	RETURN_DATE TIMESTAMP_NTZ(9),
	primary key (RETURNS_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID),
	foreign key (ORDER__ORDER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__ORDER(ORDER_ID),
	foreign key (CUSTOMER__CUSTOMER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__CUSTOMER(CUSTOMER_ID),
	foreign key (PRODUCT__PRODUCT_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__PRODUCT(PRODUCT_ID),
	foreign key (ORDER__ORDER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__ORDER(ORDER_ID),
	foreign key (CUSTOMER__CUSTOMER_ID) references ECOMMERCE_DEMO.ECOMMERCE_PANTHER_V2_PRODUCTION.OUT__CUSTOMER(CUSTOMER_ID)
);